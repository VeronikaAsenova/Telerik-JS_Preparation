ОПЕРАТОРИ И ИЗРАЗИ

- Аритметични операции - за работа с числа и числови стойности
- Логически оператори -за работа с твърдения (върни ми истина, ако това и това твърдения са верни и т.н)
- Побитови оператори - числата в програмирането и паметта в компютъра се представят с 0 и 1, битове
- Оператори за сравняване 
- Оператори за присвояване - как да променим на едно нещо стойността
- Приоритет на операторите - кои се изпълняват първо


***Какво е оператор?
- символ или поредица от символи, които представляват,изобразяват, значат някаква операция върху данни.
- една операция може да приема повече аргументи
- хваща 1-2 повече стойности, прави някакви изчисленияи взима резултата (примерно умножение на числа)
- всичките изрази в JS се оценяват до 1 стойност ( до един обект, до един масив и т.н)

***Какви са оператори в Js от това колко параметри приемат?
- Unary (унарни) - приемат 1 операнда (+/- , ! за обръщане в булев еквивалент)
- Binary (двоични)-  приемат 2 стойности 
- Ternary (?:)- приемат 3 стойности

ЗАКРЪГЛЯВАНЕ нагоре
console.log(Math.ceil(3.8));  =>4
ЗАКРЪГЛЯВАНЕ надолу
console.log(Math.floor(3.8);  =>3
НОРМАЛНО закръгляване до по-близкото
console.log(Math.roun(3.8);   =>4


***увеличение ++: 	РАБОТИ САМО С ПРОМЕНЛИВИ!!! Т.Е 5++ НЕ СТАВА
a=5;

console.log(a++);
console.log(a);
=> 5
=> 6
***ПЪРВО ВРЪЩА СТОЙНОСТТА ? И СЛЕД ТОВА ИМАМЕ УВЕЛИЧЕНАТА ПРОМЕНЛИВА

console.log(++a);
console.log(a);
=> 6
=> 6
***ПЪРВО УВЕЛИЧАВА СТОЙНОСТТА И СЛЕД ТОВА Я ВРЪЩА ( НАЙ-ПРАВИЛЕН НАЧИН И НЕ ВОДИ ДО ГРЕШКИ)

~~АНАЛОГИЧНО И С ИЗВАЖДАНЕ а--  и --а

Положително число, делено на 0 :
console.log(5/0);  =>infinity
console.log(infinity*0) =>NaN

Побитовите оператори се използват само върху цели числа

